{"version":3,"file":"355.c2b1e28c5929a0a8a4ba.js","mappings":"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","sources":["webpack://js-playground/./node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.34.1(547870b6881302c5b4ff32173c16d06009e3588f)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(() => this._updateExtraLibs());\n  }\n  _configChangeListener;\n  _updateExtraLibsToken;\n  _extraLibsChangeListener;\n  _worker;\n  _client;\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri));\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.esnext.promise.d.ts\"] = true;\nlibFileSet[\"lib.esnext.string.d.ts\"] = true;\nlibFileSet[\"lib.esnext.weakref.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  _libFiles;\n  _hasFetchedLibFiles;\n  _fetchLibFilesPromise;\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model)));\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n      onModelRemoved(event.model);\n      onModelAdd(event.model);\n    }));\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  _disposables = [];\n  _listener = /* @__PURE__ */ Object.create(null);\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter((d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1);\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map((relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null);\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, diagnostics.map((d) => this._convertDiagnostics(model, d)));\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(diagStart + diagLength);\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(infoStart + infoLength);\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(position.lineNumber, wordInfo.startColumn, position.lineNumber, wordInfo.endColumn);\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers?.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(resource.toString(), offset, myItem.label);\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class extends Adapter {\n  signatureHelpTriggerCharacters = [\"(\", \",\"];\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar OccurrencesAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getOccurrencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.map((entry) => {\n      return {\n        range: this._textSpanToRange(model, entry.textSpan),\n        kind: entry.isWriteAccess ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n      };\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName)));\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const items = await worker.getNavigationBarItems(resource.toString());\n    if (!items || model.isDisposed()) {\n      return;\n    }\n    const convert = (bucket, item, containerLabel) => {\n      let result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: []\n      };\n      if (containerLabel)\n        result2.containerName = containerLabel;\n      if (item.childItems && item.childItems.length > 0) {\n        for (let child of item.childItems) {\n          convert(bucket, child, result2.name);\n        }\n      }\n      bucket.push(result2);\n    };\n    let result = [];\n    items.forEach((item) => convert(result, item));\n    return result;\n  }\n};\nvar Kind = class {\n};\n__publicField(Kind, \"unknown\", \"\");\n__publicField(Kind, \"keyword\", \"keyword\");\n__publicField(Kind, \"script\", \"script\");\n__publicField(Kind, \"module\", \"module\");\n__publicField(Kind, \"class\", \"class\");\n__publicField(Kind, \"interface\", \"interface\");\n__publicField(Kind, \"type\", \"type\");\n__publicField(Kind, \"enum\", \"enum\");\n__publicField(Kind, \"variable\", \"var\");\n__publicField(Kind, \"localVariable\", \"local var\");\n__publicField(Kind, \"function\", \"function\");\n__publicField(Kind, \"localFunction\", \"local function\");\n__publicField(Kind, \"memberFunction\", \"method\");\n__publicField(Kind, \"memberGetAccessor\", \"getter\");\n__publicField(Kind, \"memberSetAccessor\", \"setter\");\n__publicField(Kind, \"memberVariable\", \"property\");\n__publicField(Kind, \"constructorImplementation\", \"constructor\");\n__publicField(Kind, \"callSignature\", \"call\");\n__publicField(Kind, \"indexSignature\", \"index\");\n__publicField(Kind, \"constructSignature\", \"construct\");\n__publicField(Kind, \"parameter\", \"parameter\");\n__publicField(Kind, \"typeParameter\", \"type parameter\");\n__publicField(Kind, \"primitiveType\", \"primitive type\");\n__publicField(Kind, \"label\", \"label\");\n__publicField(Kind, \"alias\", \"alias\");\n__publicField(Kind, \"const\", \"const\");\n__publicField(Kind, \"let\", \"let\");\n__publicField(Kind, \"warning\", \"warning\");\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(resource.toString(), startOffset, endOffset, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(resource.toString(), offset, ch, FormatHelper._convertOptions(options));\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(resource.toString(), start, end, errorCodes, formatOptions);\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(fileName, offset, false, false, false);\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const client = new WorkerManager(modeId, defaults);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(modeId, new SuggestAdapter(worker));\n  monaco_editor_core_exports.languages.registerSignatureHelpProvider(modeId, new SignatureHelpAdapter(worker));\n  monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(modeId, new OccurrencesAdapter(worker));\n  monaco_editor_core_exports.languages.registerDefinitionProvider(modeId, new DefinitionAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerReferenceProvider(modeId, new ReferenceAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(modeId, new OutlineAdapter(worker));\n  monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(modeId, new FormatAdapter(worker));\n  monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(modeId, new FormatOnTypeAdapter(worker));\n  monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker));\n  monaco_editor_core_exports.languages.registerRenameProvider(modeId, new RenameAdapter(libFiles, worker));\n  monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker));\n  new DiagnosticsAdapter(libFiles, defaults, modeId, worker);\n  return worker;\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OccurrencesAdapter,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","monaco_editor_core_exports","WorkerManager","constructor","_modeId","_defaults","this","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","super","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","_listener","toString","onModelRemoved","_disposables","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","create","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","resolveCompletionItem","item","myItem","details","getCompletionEntryDetails","detail","documentation","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","signatureHelpTriggerCharacters","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","provideSignatureHelp","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","provideHover","getQuickInfoAtPosition","contents","textSpan","OccurrencesAdapter","provideDocumentHighlights","getOccurrencesAtPosition","isWriteAccess","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","getDefinitionAtPosition","refModel","ReferenceAdapter","provideReferences","getReferencesAtPosition","OutlineAdapter","provideDocumentSymbols","getNavigationBarItems","convert","bucket","containerLabel","result2","outlineTypeTable","SymbolKind","spans","selectionRange","containerName","childItems","child","Method","const","localFunction","javaScriptWorker","typeScriptWorker","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","provideDocumentRangeFormattingEdits","startOffset","endOffset","edits","getFormattingEditsForRange","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","provideCodeActions","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","title","description","RenameAdapter","provideRenameEdits","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","provideInlayHints","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","registerCompletionItemProvider","registerSignatureHelpProvider","registerHoverProvider","registerDocumentHighlightProvider","registerDefinitionProvider","registerReferenceProvider","registerDocumentSymbolProvider","registerDocumentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","registerCodeActionProvider","registerRenameProvider","registerInlayHintsProvider"],"sourceRoot":""}